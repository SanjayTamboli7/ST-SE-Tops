/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2024-09-03 05:44:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en-US\" dir=\"ltr\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<title>C R M</title>\r\n");
      out.write("<link rel=\"apple-touch-icon\" sizes=\"57x57\" href=\"assets/images/favicons/apple-icon-57x57.png\">\r\n");
      out.write("<link rel=\"apple-touch-icon\" sizes=\"60x60\" href=\"assets/images/favicons/apple-icon-60x60.png\">\r\n");
      out.write("<link rel=\"apple-touch-icon\" sizes=\"72x72\" href=\"assets/images/favicons/apple-icon-72x72.png\">\r\n");
      out.write("<link rel=\"apple-touch-icon\" sizes=\"76x76\" href=\"assets/images/favicons/apple-icon-76x76.png\">\r\n");
      out.write("<link rel=\"apple-touch-icon\" sizes=\"114x114\" href=\"assets/images/favicons/apple-icon-114x114.png\">\r\n");
      out.write("<link rel=\"apple-touch-icon\" sizes=\"120x120\" href=\"assets/images/favicons/apple-icon-120x120.png\">\r\n");
      out.write("<link rel=\"apple-touch-icon\" sizes=\"144x144\" href=\"assets/images/favicons/apple-icon-144x144.png\">\r\n");
      out.write("<link rel=\"apple-touch-icon\" sizes=\"152x152\" href=\"assets/images/favicons/apple-icon-152x152.png\">\r\n");
      out.write("<link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"assets/images/favicons/apple-icon-180x180.png\">\r\n");
      out.write("<link rel=\"icon\" type=\"image/png\" sizes=\"192x192\" href=\"assets/images/favicons/android-icon-192x192.png\">\r\n");
      out.write("<link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"assets/images/favicons/favicon-32x32.png\">\r\n");
      out.write("<link rel=\"icon\" type=\"image/png\" sizes=\"96x96\" href=\"assets/images/favicons/favicon-96x96.png\">\r\n");
      out.write("<link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"assets/images/favicons/favicon-16x16.png\">\r\n");
      out.write("<link rel=\"manifest\" href=\"/manifest.json\">\r\n");
      out.write("<meta name=\"msapplication-TileColor\" content=\"#ffffff\">\r\n");
      out.write("<meta name=\"msapplication-TileImage\" content=\"assets/images/favicons/ms-icon-144x144.png\">\r\n");
      out.write("<meta name=\"theme-color\" content=\"#ffffff\">\r\n");
      out.write("<!--  Style sheets =============================================-->\r\n");
      out.write("<!-- Default style sheets-->\r\n");
      out.write("<link href=\"assets/lib/bootstrap/dist/css/bootstrap.min.css\"\r\n");
      out.write("\trel=\"stylesheet\">\r\n");
      out.write("<!-- Template specific style sheets-->\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"https://fonts.googleapis.com/css?family=Roboto+Condensed:400,700\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Volkhov:400i\" rel=\"stylesheet\">\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"assets/lib/animate.css/animate.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"assets/lib/components-font-awesome/css/font-awesome.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"assets/lib/et-line-font/et-line-font.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"assets/lib/flexslider/flexslider.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"assets/lib/owl.carousel/dist/assets/owl.carousel.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"assets/lib/owl.carousel/dist/assets/owl.theme.default.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"assets/lib/magnific-popup/dist/magnific-popup.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"assets/lib/simple-text-rotator/simpletextrotator.css\" rel=\"stylesheet\">\r\n");
      out.write("<!-- Main stylesheet and color file-->\r\n");
      out.write("<link href=\"assets/css/style.css\" rel=\"stylesheet\">\r\n");
      out.write("<link id=\"color-scheme\" href=\"assets/css/colors/default.css\" rel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("<body data-spy=\"scroll\" data-target=\".onpage-navigation\"\r\n");
      out.write("\tdata-offset=\"60\">\r\n");
      out.write("\t<main>\r\n");
      out.write("\t\t<div class=\"page-loader\">\r\n");
      out.write("\t\t\t<div class=\"loader\">Loading...</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "MenuBar.html", out, false);
      out.write("\r\n");
      out.write("\t\t<section class=\"bg-dark-30 showcase-page-header module parallax-bg\">\r\n");
      out.write("\t\t\t<div class=\"titan-caption\">\r\n");
      out.write("\t\t\t\t<div class=\"caption-content\">\r\n");
      out.write("\t\t\t\t\t<div class=\"font-alt mb-30 titan-title-size-1\">Good customer relations equals success</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"font-alt mb-40 titan-title-size-4\">Get closer to your customer</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</section>\r\n");
      out.write("\t\t<div class=\"main showcase-page\">\t\t\t\r\n");
      out.write("\t\t\t<section class=\"module-extra-small bg-dark\">\r\n");
      out.write("\t\t\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-6 col-md-8 col-lg-9\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"callout-text font-alt\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<h4 style=\"margin-top: 0px;\">Build successful business with world class CRM</h4>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p style=\"margin-bottom: 0px;\">Apply this CRM today</p>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</section>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"scroll-up\">\r\n");
      out.write("\t\t\t<a href=\"#totop\"><i class=\"fa fa-angle-double-up\"></i></a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</main>\r\n");
      out.write("\t<!-- JavaScripts ============================================= -->\r\n");
      out.write("\t<script src=\"assets/lib/jquery/dist/jquery.js\"></script>\r\n");
      out.write("\t<script src=\"assets/lib/bootstrap/dist/js/bootstrap.min.js\"></script>\r\n");
      out.write("\t<script src=\"assets/lib/wow/dist/wow.js\"></script>\r\n");
      out.write("\t<script src=\"assets/lib/jquery.mb.ytplayer/dist/jquery.mb.YTPlayer.js\"></script>\r\n");
      out.write("\t<script src=\"assets/lib/isotope/dist/isotope.pkgd.js\"></script>\r\n");
      out.write("\t<script src=\"assets/lib/imagesloaded/imagesloaded.pkgd.js\"></script>\r\n");
      out.write("\t<script src=\"assets/lib/flexslider/jquery.flexslider.js\"></script>\r\n");
      out.write("\t<script src=\"assets/lib/owl.carousel/dist/owl.carousel.min.js\"></script>\r\n");
      out.write("\t<script src=\"assets/lib/smoothscroll.js\"></script>\r\n");
      out.write("\t<script src=\"assets/lib/magnific-popup/dist/jquery.magnific-popup.js\"></script>\r\n");
      out.write("\t<script\r\n");
      out.write("\t\tsrc=\"assets/lib/simple-text-rotator/jquery.simple-text-rotator.min.js\"></script>\r\n");
      out.write("\t<script src=\"assets/js/plugins.js\"></script>\r\n");
      out.write("\t<script src=\"assets/js/main.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
