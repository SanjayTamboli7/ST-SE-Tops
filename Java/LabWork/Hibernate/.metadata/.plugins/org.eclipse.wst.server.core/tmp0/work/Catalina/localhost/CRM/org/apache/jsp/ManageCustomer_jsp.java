/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2024-08-29 11:35:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.dao.CustomerDao;
import com.model.CustomerModel;
import java.util.List;

public final class ManageCustomer_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.model.CustomerModel");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.dao.CustomerDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("  <!-- \r\n");
      out.write("  \r\n");
      out.write("  pkCustomerID      (Add mode -> Auto generated. Edit mode -> No change. Access to BDE.)\r\n");
      out.write("  CustomerName      (Add / Edit mode -> Let BDE add / edit customer name.)\r\n");
      out.write("  CustomerEmailID   (Add / Edit mode -> Let BDE add / edit customer email ID.)\r\n");
      out.write("  CustomerContactNo (Add / Edit mode -> Let BDE add / edit customer contact number.)\r\n");
      out.write("  CustomerAddress   (Add / Edit mode -> Let BDE add / edit customer address.)\r\n");
      out.write("  CustomerCity      (Add / Edit mode -> Let BDE add / edit customer city.)\r\n");
      out.write("  CustomerState     (Add / Edit mode -> Let BDE add / edit customer state.)\r\n");
      out.write("  CustomerCountry   (Add / Edit mode -> Let BDE add / edit customer country.)\r\n");
      out.write("  fkRegID           (Add / Edit mode -> Work out the pkRegID from tblRegistration using login email id.)\r\n");
      out.write("  CreatedDateTime\t(Add / Edit mode -> It should be system date & time.) \r\n");
      out.write("  CreatedByIP\t\t(Add / Edit mode -> It should be client system's IP address.)\r\n");
      out.write("      \r\n");
      out.write("  Allow BDE to delete it if customer is not associated with any project.\r\n");
      out.write("  -->\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>View Customers</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "HeaderCustomer.html", out, false);
      out.write("\r\n");
      out.write("\t<div class=\"px-4 py-5 my-5\">\r\n");
      out.write("\t\t<div class=\"col-lg-6 mx-auto\">\r\n");
      out.write("\t\t\t<h4 class=\"display-5 fw-bold text-body-emphasis\">All Customers</h4>\r\n");
      out.write("\t\t\t");

			List<CustomerModel> list = CustomerDao.getAllCustomers();
			request.setAttribute("list", list);
			
      out.write("\r\n");
      out.write("\t\t\t<table class=\"table table-bordered border-dark table-striped\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>Id</th>\r\n");
      out.write("\t\t\t\t\t<th>Name</th>\r\n");
      out.write("\t\t\t\t\t<th>Email ID</th>\r\n");
      out.write("\t\t\t\t\t<th>Contact No</th>\r\n");
      out.write("\t\t\t\t\t<th>Address</th>\r\n");
      out.write("\t\t\t\t\t<th>City</th>\r\n");
      out.write("\t\t\t\t\t<th>State</th>\r\n");
      out.write("\t\t\t\t\t<th>Country</th>\r\n");
      out.write("\t\t\t\t\t<th>Customer of</th>\r\n");
      out.write("\t\t\t\t\t<th>Edit</th>\r\n");
      out.write("\t\t\t\t\t<th>Delete</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");

				for (CustomerModel c : list) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(c.getPkcustomerid());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(c.getCustomername());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(c.getCustomeremailid());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(c.getCustomercontactno());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(c.getCustomeraddress());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(c.getCustomercity());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(c.getCustomerstate());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(c.getCustomercountry() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(c.getFkregid());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td><a class=\"btn btn-success\"\r\n");
      out.write("\t\t\t\t\t\thref=\"EditCustomer.jsp?id=");
      out.print(c.getPkcustomerid());
      out.write("\">Edit</a></td>\r\n");
      out.write("\t\t\t\t\t<td><a class=\"btn btn-danger\"\r\n");
      out.write("\t\t\t\t\t\thref=\"DeleteCustomer.jsp?id=");
      out.print(c.getPkcustomerid());
      out.write("\">Delete</a></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");

				}
				
      out.write("\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
